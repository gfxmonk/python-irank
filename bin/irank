#!/usr/bin/env python
from __future__ import print_function
import os, sys

args = sys.argv[1:]
if not args:
	base = os.path.dirname(__file__)
	print('Commands:', file=sys.stderr)
	print('  (run irank COMMAND --help for specific help)\n', file=sys.stderr)
	cmds = [p[6:] for p in os.listdir(base) if p.startswith('irank-')]
	cmds = ['  irank %s' % cmd for cmd in cmds]
	print('\n'.join(cmds), file=sys.stderr)
	sys.exit(1)

bin_path = os.path.dirname(__file__)
sys.path.insert(0, os.path.dirname(bin_path))
import irank
irank_path = os.path.abspath(os.path.dirname(os.path.dirname(irank.__file__)))

def prefix(var, path):
	current = os.environ.get(var, None)
	os.environ[var] = os.pathsep.join([path, current]) if current else path

# make sure sub-python processes get the same python and modules
prefix('PYTHONPATH', irank_path)
prefix('PATH', os.path.dirname(sys.executable))
prefix('PATH', bin_path)

action = args[0]
if os.path.isabs(action):
	# development aid; execute a nonlocal action
	pass
else:
	args[0] = "irank-%s" % action
os.execvp(args[0], args)
